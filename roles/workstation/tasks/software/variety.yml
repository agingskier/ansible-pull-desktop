---
- name: software | variety block
  tags: variety
  block:
    - name: software | variety | install variety
      apt:
        name: variety
        state: present

    - name: software | variety | cmd starts config window expecting close, creates variety conf file
      become: yes
      become_user: "{{ user_name }}"
      command: variety --preferences
      timeout: 10
      ignore_errors: yes
      register: variety_result
      changed_when: variety_result.rc == 0

    - name: software | variety | find PID of variety task
      shell: |
        set -o pipefail
        ps -eo pid,fname | grep variety | awk '{ print $1 }'
      args:
        warn: false
        executable: /bin/bash
      register: variety_pid
      changed_when: variety_pid.rc == 0

    - name: software | variety | kill running variety task
      become: yes
      become_user: "{{ user_name }}"
      command: kill {{ variety_pid.stdout }}
      register: variety_kill
      changed_when: variety_kill == 0

# 
# variety.conf file has now been created and can be modified
#            
    - name: Software | variety | Replace Change-Interval 1 minute line
      lineinfile:
        path: /home/{{ user_name }}/.config/variety/variety.conf
        regexp: '^change_interval ='
        line: 'change_interval = 60'

    - name: software | variety | Replace all installed sources
      replace:
        path: /home/{{ user_name }}/.config/variety/variety.conf
        regexp: "{{ item.regex }}"
        replace: "{{ item.repl }}"
      with_items:
        - { regex: '^src1 = True', repl: 'src1 = False' }
        - { regex: '^src2 = True', repl: 'src2 = False' }
        - { regex: '^src3 = True', repl: 'src3 = False' }
        - { regex: '^src4 = True', repl: 'src4 = False' }
        - { regex: '^src5 = True', repl: 'src5 = False' }
        - { regex: '^src6 = True', repl: 'src6 = False' }
        - { regex: '^src7 = True', repl: 'src7 = False' }
        - { regex: '^src8 = True', repl: 'src8 = False' }
#
# If there are more than one matches in the file, ansible lineinfile
# would replace only the last line matched or found,
# or insertafter the last matched line
#
    - name: Insert background line
      lineinfile:
        path: /home/{{ user_name }}/.config/variety/variety.conf
        insertafter: '^src'
        line: 'src12 = True|folder|/mnt/NAS/media/Pictures/Weltreise'

  when:
    - variety is defined
    - variety
