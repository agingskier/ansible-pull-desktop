---
#
#  install info from: https://computingforgeeks.com/install-kvm-centos-rhel-ubuntu-debian-sles-arch/
#
- name: Software | kvm, qemu, libvirt block
  when:
    - kvm is defined
    - kvm
  become: true
  become_method: ansible.builtin.sudo
  block:
    - name: Software | kvm | install cpu-checker prerequisite
      ansible.builtin.apt:
        name: cpu-checker

    - name: Software | kvm | check system for kvm
      ansible.builtin.command: kvm-ok
      register: kvm_result
      changed_when: "'KVM acceleration can be used' in kvm_result.stdout"

    - name: Software | kvm | install kvm and dependencies
      ansible.builtin.apt:
        pkg:
          - qemu-kvm
          - libvirt-dev
          - libvirt-daemon
          - libvirt-daemon-system
          - libvirt-clients
          - virtinst
          - virt-manager
          - virt-viewer
          - bridge-utils
          - libosinfo-bin
          - libguestfs-tools
        state: present
      when:
        - "'KVM acceleration can be used' in kvm_result.stdout"

    - name: Insert vhost-net in /etc/modules
      ansible.builtin.lineinfile:
        dest: /etc/modules
        line: 'vhost-net'

    - name: Software | kvm | add groups libvirt, kvm to user bernhard
      ansible.builtin.user:
        name: bernhard
        groups: libvirt,kvm
        append: true
      when:
        - "'KVM acceleration can be used' in kvm_result.stdout"

    - name: Software | kvm | create config/libvirt directory
      ansible.builtin.file:
        path: /home/bernhard/{{ item.dir }}
        state: directory
        owner: bernhard
        group: users
        mode: "0775"
      with_items:
        - { dir: '.config/libvirt' }

    - name: Software | kvm | copy libvirt config file
      ansible.builtin.copy:
        src: /etc/libvirt/{{ item.src }}
        dest: /home/{{ user_name }}/{{ item.dest }}
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: "0640"
      with_items:
        - { src: 'libvirt.conf', dest: '.config/libvirt/libvirt.conf' }

    - name: Software | kvm | remove hash from uri_default line
      ansible.builtin.replace:
        path: /home/bernhard/.config/libvirt/libvirt.conf
        regexp: "{{ item.regexp }}"
        replace: "{{ item.value }}"
      with_items:
        - { regexp: '#uri_default', value: 'uri_default' }

    - name: Software | kvm | insert log-filter line
      ansible.builtin.lineinfile:
        path: /etc/libvirt/libvirtd.conf
        insertafter: '^#log_filters='
        line: 'log_filters="1:qemu"'

    - name: Software | kvm | insert log-output line
      ansible.builtin.lineinfile:
        path: /etc/libvirt/libvirtd.conf
        insertafter: '^#log_output='
        line: 'log_filters="1:file:/var/log/libvirt/libvirtd.log"'
