"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""               
"               
"               ██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
"               ██║   ██║██║████╗ ████║██╔══██╗██╔════╝
"               ██║   ██║██║██╔████╔██║██████╔╝██║     
"               ╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║     
"                ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
"                 ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
"               
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""   

"|----------------------------------------------------------------------------|
"|          Basic Vim Settings                                                |
"|----------------------------------------------------------------------------|"
" Disable compatibility with vi which can cause unexpected issues.
set nocompatible

" Enable type file detection. Vim will be able to try to detect the type of file in use.
filetype on

" Enable plugins and load plugin for the detected file type.
filetype plugin on

" Load an indent file for the detected file type.
filetype indent on

" Turn syntax highlighting on.
syntax on

" Add numbers to each line on the left-hand side.
set number

" Show file stats
set ruler

" Blink cursor on error instead of beeping (grr)
set visualbell

" Highlight cursor line underneath the cursor horizontally.
set cursorline

" Highlight cursor line underneath the cursor vertically.
set cursorcolumn

" Set shift width to 4 spaces.
set shiftwidth=4

" Set tab width to 4 columns.
set tabstop=4

" Use space characters instead of tabs.
set expandtab

" Do not save backup files.
set nobackup

" Do not let cursor scroll below or above N number of lines when scrolling.
set scrolloff=10

" Do not wrap lines. Allow long lines to extend as far as the line goes.
set nowrap

" While searching though a file incrementally highlight matching characters as you type.
set incsearch

" Ignore capital letters during search.
set ignorecase

" Override the ignorecase option if searching for capital letters.
" This will allow you to search specifically for capital letters.
set smartcase

" Show partial command you type in the last line of the screen.
set showcmd

" Show the mode you are on the last line.
set showmode

" Show matching words during a search.
set showmatch

" Use highlighting when doing a search.
set hlsearch

" Set the commands to save in history default number is 20.
set history=1000

" Enable auto completion menu after pressing TAB.
set wildmenu

" Make wildmenu behave like similar to Bash completion.
set wildmode=list:longest

" There are certain files that we would never want to edit with Vim.
" Wildmenu will ignore files with these extensions.
set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx

" Fold by indent
set foldmethod=indent   
set foldnestmax=10
set nofoldenable
set foldlevel=2

" PLUGINS ---------------------------------------------------------------- {{{
"|------------------------------------------------------------------------|
"|         Plugins Settings                                               |
"|------------------------------------------------------------------------|

call plug#begin('~/.vim/plugged')

  Plug 'dense-analysis/ale'
  Plug 'preservim/nerdtree'
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'Yggdroot/indentLine'
  Plug 'frazrepo/vim-rainbow'
  Plug 'ryanoasis/vim-devicons'
  Plug 'pearofducks/ansible-vim'
  Plug 'pedrohdz/vim-yaml-folds'
  Plug 'tpope/vim-fugitive'

call plug#end()

" }}}

" MAPPINGS --------------------------------------------------------------- {{{
"|------------------------------------------------------------------------|
"|        Mappings                                                        |
"|------------------------------------------------------------------------|

"The backslash key is the default leader key but we change it to a comma
let mapleader = ','

" Type jj to exit insert mode quickly.
inoremap jj <Esc>

" Press ,\ to jump back to the last cursor position.
nnoremap <leader>\ ``

" Press the space bar to type the : character in command mode.
nnoremap <space> :

" You can split the window in Vim by typing :split or :vsplit.
" Navigate the split view easier by pressing CTRL+j, CTRL+k, CTRL+h, or CTRL+l.
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" Resize split windows using arrow keys by pressing:
" CTRL+UP, CTRL+DOWN, CTRL+LEFT, or CTRL+RIGHT.
noremap <c-up> <c-w>+
noremap <c-down> <c-w>-
noremap <c-left> <c-w>>
noremap <c-right> <c-w><

" Refresh vim config with F5                                                                      
noremap <silent> <F5> :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>

"|
"| ALE (Asynchronous Lint Engine)
"|

let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_sign_error = '✘'
let g:ale_sign_warning = '⚠'
let g:ale_lint_on_text_changed = 'never'

"|
"| Rainbow (bracket colors)
"|

let g:rainbow_active = 1
let g:rainbow_ctermfgs = ['green', 'magenta', 'yellow', 'red', 'cyan']

"|
"| IndentLine
"|

let g:indentLine_char_list = ['|', '¦', '┆', '┊']

" let g:indentLine_color_term = 239
" Specify terminal vim indent line color.
"    e.g.  let g:indentLine_color_term = 239

" let g:indentLine_bgcolor_term = 202
" Specify terminal vim indent line background color.
"    e.g.  let g:indentLine_bgcolor_term = 202

let g:indentLine_indentLevel = 6
" Specify how much indent level do you want to use for
" indentLine. Most program will not has bigger indent level than

let g:indentLine_leadingSpaceChar = '·'
" Specify a character to show for leading spaces.
" You also can use other characters: specified 'middle dot'

"|
"| Airline (status line)
"|

set laststatus=2
let g:airline_theme='dark'
" If vim-airline-themes are installed ...
" themes are automatically selected based on the matching colorscheme.
" This can be overridden by defining a value like above - 'dark' is the default theme.

" Show buffer numbers in a line at the top
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1

" How the path should be formatted
let g:airline#extensions#tabline#formatter = 'unique_tail'

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '▶'
let g:airline_left_alt_sep = '»'
let g:airline_right_sep = '◀'
let g:airline_right_alt_sep = '«'
let g:airline_symbols.readonly = '🔒'
let g:airline_symbols.linenr = ' ␤:'
let g:airline_symbols.maxlinenr = ' ☰ '

"|
"| NERDTree Specific mappings
"|

" Show hidden files. E.g. .gitignore
let NERDTreeShowHidden = 1

" Prevent NERDTree from hijacking directory browsing from Netrw
let NERDTreeHijackNetrw = 0

nnoremap <C-f> :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>

" NERDTree Shortcuts  F2 to toggle open and close. F3 to find
"silent! map <F2> :NERDTreeToggle<CR>                                                            
"silent! map <F3> :NERDTreeFind<CR>       

" Have NERDTree ignore certain files and directories.f
let NERDTreeIgnore=['\.git$', '\.jpg$', '\.mp4$', '\.ogg$', '\.iso$', '\.pdf$', '\.pyc$', '\.odt$', '\.png$', '\.gif$', '\.db$']

"|
"| vim-yaml-folds
"|

set foldlevelstart=20

" }}}

" VIMSCRIPT -------------------------------------------------------------- {{{

autocmd FileType yaml setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab

" This will enable code folding.
" Use the marker method of folding.
augroup filetype_vim
    autocmd!
    autocmd FileType vim setlocal foldmethod=marker
augroup END

" You can split a window into sections by typing `:split` or `:vsplit`.
" Display cursorline and cursorcolumn ONLY in active window.
augroup cursor_off
    autocmd!
    autocmd WinLeave * set nocursorline nocursorcolumn
    autocmd WinEnter * set cursorline cursorcolumn
augroup END

" }}}


" STATUS LINE ------------------------------------------------------------ {{{

" Status bar code goes here.

" }}}
