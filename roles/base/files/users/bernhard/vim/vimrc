""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""               
"               
"               ██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
"               ██║   ██║██║████╗ ████║██╔══██╗██╔════╝
"               ██║   ██║██║██╔████╔██║██████╔╝██║     
"               ╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║     
"                ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
"                 ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
"               
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""   

"|----------------------------------------------------------------------------|
"|          Vim Settings                                                      |
"|----------------------------------------------------------------------------|"

" Disable compatibility with vi which can cause unexpected issues.
set nocompatible
       
" Disable annoying bell.
set noerrorbells visualbell t_vb=   

" Set color scheme. See .vim/colors directory for installed colorschemes                         
colorscheme spacecamp     

" Use comma as Leader
let mapleader = ','                 

" Required: Enable filetype: detection, specific scripts, and indent scripts.
filetype plugin indent on    

" Turn backup off                                                                                 
set nobackup                                                                                      
set nowb                                                                                          
set noswapfile       

" Fix tmux background color                                                                       
if &term =~ '256color'                                                                            
    set t_ut=                                                                                     
endif  

" Enable auto completion menu after pressing TAB.
set wildmenu

" Make wildmenu behave like similar to Bash completion.
set wildmode=list:longest

" There are certain files that we would never want to edit with Vim.
" Wildmenu will ignore files with these extensions.
set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx

" Set utf8 as standard encoding                          
set encoding=utf8

" Set keyboard shortcut for paste toggle.                                                       
set pastetoggle=<F10>                                                                           

" this turns off physical line wrapping (ie: automatic insertion of newlines)                   
set textwidth=0 wrapmargin=0 

" Remember info about open buffers on close                                                     
set viminfo^=% 

"|----------------------------------------------------------------------------|
"|         End Vim Settings                                                   |
"|----------------------------------------------------------------------------|


"|----------------------------------------------------------------------------|
"|         Search                                                             |
"|----------------------------------------------------------------------------|

" Ignore case while searching
set ignorecase

" Use highlighting when doing a search.
set hlsearch                    

" While searching though a file incrementally highlight matching characters as you type.
set incsearch                      

" Show partial command you type in the last line of the screen.
set showcmd

" Show the mode you are on the last line.
set showmode

" Show matching words during a search.
set showmatch

" Map <Space> to / (search) and Ctrl-<Space> to ? (backwards search)                              
map <space> /                                                                                     
map <c-space> ?    

" Clear search highlight with ctrl-l                                                                 
noremap <silent> <c-l> :nohls<cr><c-l>    

"|----------------------------------------------------------------------------|
"|         End Search                                                         |
"|----------------------------------------------------------------------------|


"|----------------------------------------------------------------------------|
"|          Styling                                                           |
"|----------------------------------------------------------------------------|

" Switch on syntax highlighting.
syntax on                       

" Add numbers to each line on the left-hand side.
set number

" Set font size. Howerver, font-family is determined by the relevant terminal.
set guifont=Monospace\ 12

" Remove split borders
hi vertsplit guifg=bg guibg=bg

" Show (partial) command in the last line of the screen. 
set showcmd 

" Necessary to show Unicode glyphs
set encoding=utf-8 

" Highlight trailing whitespace in red                                                            
match ErrorMsg /\s\+\%#\@<!$/ 

"|----------------------------------------------------------------------------|
"|          End Styling                                                       |
"|----------------------------------------------------------------------------|


"|----------------------------------------------------------------------------|
"|          Formatting                                                        |
"|----------------------------------------------------------------------------|

" Insert 4 spaces for a tab.
set tabstop=4                   

" Insert 4 spaces for an indentation.
set shiftwidth=4                

" Insert spaces whenever the tab key is pressed.
set expandtab                   

" Use spaces instead of tabs                                                                      
set expandtab                                                                                     
                                                                                                  
" Be smart when using tabs                                                                        
set smarttab

" Highlight cursor line underneath the cursor horizontally.
set cursorline

" Highlight cursor line underneath the cursor vertically.
set cursorcolumn               

"|----------------------------------------------------------------------------|
"|           End Formatting                                                   |
"|----------------------------------------------------------------------------|


"|----------------------------------------------------------------------------|
"|         Plugins Settings                                                   |
"|----------------------------------------------------------------------------|

" Enable pathogen                                                                                 
execute pathogen#infect()

"|
"| ansible-vim
"|

" ansible-vim: set indent to 0 after two newlines in insert-mode                                  
let g:ansible_unindent_after_newline = 1                                                          
                                                                                                  
" ansible-vim settings                                                                            
let g:ansible_attribute_highlight = "od"                                                          
let g:ansible_name_highlight = 'b'                                                                
let g:ansible_extra_keywords_highlight = 1                                                        
let g:ansible_normal_keywords_highlight = 'Constant'                                              
let g:ansible_with_keywords_highlight = 'Constant'     

"|
"| NERDTree
"|

" Show hidden files. E.g. .gitignore
let NERDTreeShowHidden = 1

" Prevent NERDTree from hijacking directory browsing from Netrw
let NERDTreeHijackNetrw = 0

" Have NERDTree ignore certain files and directories.
let NERDTreeIgnore=['\.git$', '\.jpg$', '\.mp4$', '\.ogg$', '\.iso$', '\.pdf$', '\.pyc$', '\.odt$', '\.png$', '\.gif$', '\.db$']

"|
"| Syntastic
"|

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_signs = 1
let g:syntastic_enable_highlighting = 1
let g:syntastic_loc_list_height = 5

" Enable checking of yaml files.
let g:syntastic_yaml_checkers = ['yamllint']

" Enable checking of python files.
let g:syntastic_python_checkers = ['flake8', 'pyflakes']
" Disable E501(over 79 chars), W191(tabs instead of space), W391(blank line at end of file
let g:syntastic_python_flake8_args='--ignore=E501'

" Enable checking of perl files.
let g:syntastic_perl_checkers = ['perl']
let g:syntastic_enable_perl_checker = 1

let g:syntastic_mode_map = { 'mode': 'active',
        \ 'active_filetypes': ['python', 'javascript', 'css', 'html', 'yaml'],
        \ 'passive_filetypes': ['make','cpp','c'] }

"|
"| Airline (status line)
"|

set laststatus=2

" Show buffer numbers in a line at the top
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1

" How the path should be formatted
let g:airline#extensions#tabline#formatter = 'unique_tail'

"|
"| IndentLine
"|

let g:indentLine_char_list = ['|', '¦', '┆', '┊']

"|
"| Rainbow (bracket colors)
"|

let g:rainbow_active = 1
let g:rainbow_ctermfgs = ['green', 'magenta', 'yellow', 'red', 'cyan']

"|----------------------------------------------------------------------------|
"|          End Plugin Settings                                               |
"|----------------------------------------------------------------------------|


"|----------------------------------------------------------------------------|
"|        Mappings                                                            |
"|----------------------------------------------------------------------------|

" Use comma as Leader
let mapleader = ','

" NERDTree Shortcuts  F2 to toggle open and close. F3 to find
silent! map <F2> :NERDTreeToggle<CR>                                                            
silent! map <F3> :NERDTreeFind<CR>       

" Switch buffers using F4                                                                       
nnoremap <F4> :buffers<CR>:buffer<Space>         

" Refresh vim config with F5                                                                      
noremap <silent> <F5> :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>

" Escape to normal mode
inoremap jj <esc> 

" You can split the window in Vim by typing :split or :vsplit.
" Navigate the split view easier by pressing leader+j, leader+k, leader+h, or leader+l.
" leader = ','
noremap <leader>k :wincmd k<CR>                                                                 
noremap <leader>j :wincmd j<CR>                                                                 
noremap <leader>h :wincmd h<CR>                                                                 
noremap <leader>l :wincmd l<CR> 

" Resize split windows using arrow keys by pressing:
" leader+UP, leader+DOWN, leader+LEFT, or leader+RIGHT; leader = ','.
noremap <leader><up> :wincmd k<CR>                                                              
noremap <leader><down> :wincmd j<CR>                                                            
noremap <leader><left> :wincmd h<CR>                                                            
noremap <leader><right> :wincmd l<CR>   


"|----------------------------------------------------------------------------|
"|        Vim Scripts                                                         |
"|----------------------------------------------------------------------------|

" You can split a window into sections by typing `:split` or `:vsplit`.
" Display cursorline and cursorcolumn ONLY in active window.                                                                       
augroup CursorlineOnlyInActiveWindow                                                              
    autocmd!                                                                                      
    autocmd VimEnter,WinEnter,BufWinEnter * setlocal cursorline cursorcolumn                                  
    autocmd WinLeave * setlocal nocursorline nocursorcolumn                                                     
augroup END     

" Return to the last edit position when opening files.                                            
augroup vimrcEx                                                                                   
    autocmd!                                                                                      
    autocmd BufReadPost *                                                                          
        \ if line("'\"") > 0 && line("'\"") <= line("$") |                                        
        \   exe "normal g`\"" |                                                                   
        \ endif                                                                                   
augroup END           

" Returns true if paste mode is enabled                                                           
function! HasPaste()                                                                              
    if &paste                                                                                     
        return 'PASTE MODE  '                                                                     
    en                                                                                            
    return ''                                                                                     
endfunction   

" Ensure cursor is at the top of the file, if editing a git commit message:                     
autocmd FileType gitcommit au! BufEnter COMMIT_EDITMSG call setpos('.', [0, 1, 1, 0])    

"|----------------------------------------------------------------------------|
"|        End Vim Scripts                                                     |
"|----------------------------------------------------------------------------|
