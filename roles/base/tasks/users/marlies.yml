---
- name: users | marlies block
  block:
#  define these variables in host_vars
#    - name: users | marlies | user name fact
#      set_fact:
#        user_name: 'marlies'
#        group_name: 'users'

    - name: users | marlies | add sudoers file
      copy:
        src: users/sudoers_marlies
        dest: /etc/sudoers.d/marlies
        owner: root
        group: root
        mode: 0440

    - name: users | bernhard | change Exec= line for Tilix New Window in com.gexperts.Tilix.
desktop
      become: yes
      become_method: sudo
      lineinfile:
        path: /usr/share/applications/com.gexperts.Tilix.desktop
        regexp: '^Exec=tilix --action=app-new-window'
        line: 'Exec=tilix --title=wide --action=app-new-window --geometry=180x24+100+200 --session=~/.config/tilix/wide.json'

    - name: users | marlies | copy dotfiles
      copy:
        src: users/{{ item.src }}
        dest: /home/{{ user_name }}/{{ item.dest }}
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: 0600
      with_items:
        - { src: 'bash/bash_aliases', dest: '.bash_aliases' }
        - { src: 'bash/bash_functions', dest: '.bash_functions' }
        - { src: 'bash/bashrc', dest: '.bashrc' }
        - { src: 'bash/dircolors', dest: '.dircolors' }
        - { src: 'tilix/split.json', dest: '.config/tilix/split.json' }
        - { src: 'tilix/wide.json', dest: '.config/tilix/wide.json' }
#        - { src: 'autostart/conky_autostart', dest: '.config/autostart/conky.desktop' }
#        - { src: 'autostart/tilix_autostart', dest: '.config/autostart/tilix.desktop' }

#    - name: users | marlies | conky | synchronize with NAS backup
#      ansible.posix.synchronize:
#        src: /mnt/NAS/backup/{{ hostvars[inventory_hostname].ansible_hostname }}/conky/
#        dest: /home/marlies/conky/
#        archive: yes

  when:
    - marlies is defined
    - marlies
