---
- name: software | tmux | install tmux package
  apt:
    state: present
    pkg:
      - tmux

- name: software | tmux | create .tmux directories
  file:
    path: /home/bernhard/{{ item.dir }}
    state: directory
    owner: bernhard
    group: users
    mode: 0700
  with_items:
    - { dir: '.tmux' }
    - { dir: '.tmux/plugins' }

- name: software | tmux | git checkout git tmux plugins
  git:
    repo: https://github.com/tmux-plugins/{{ item.repo }}
    dest: /home/bernhard/.tmux/plugins/{{ item.plug }}
    force: yes
    version: master
  with_items:
    - { repo: 'tmux-cpu.git', plug: 'tmux-cpu' }
    - { repo: 'tmux-prefix-highlight.git', plug: 'tmux-prefix-highlight' }
    - { repo: 'tmux-yank.git', plug: 'tmux-yank' }
    - { repo: 'tmux-sidebar.git', plug: 'tmux-sidebar' }
    - { repo: 'tmux-open.git', plug: 'tmux-open' }

- name: software | tmux | recursively chown all tmux plugins files
  file:
    path: /home/bernhard/.tmux/plugins
    state: directory
    owner: bernhard
    group: users
    mode: 0755
    recurse: yes

- name: software | tmux | Download latest release gitmux info
  command: curl https://github.com/arl/gitmux/releases/latest
  args:
    warn: false
  register: gitmux_info
  changed_when: gitmux_info.rc == 0

- name: software | tmux | print gitmux_info
  debug:
    var: gitmux_info
    verbosity: 2

- name: software | tmux | set fact with extracted release
  set_fact:
    gitmux_release: "{{ gitmux_info | regex_search('(?<=tag/)[^\"]*') }}"

- name: software | tmux | print gitmux-release number
  debug:
    var: gitmux_release
    verbosity: 2

# extract version number without "v" from variable gitmux_release
- name: software | tmux | install binary gitmux
  become: true
  become_method: sudo
  unarchive:
    src: https://github.com/arl/gitmux/releases/download/{{ gitmux_release }}/gitmux_{{ gitmux_release | regex_search('(\d(.*))') }}_linux_amd64.tar.gz
    dest: /usr/local/bin
    remote_src: yes
    mode: 0755
    owner: root
    group: root

- name: software | tmux | create gitmux configuration file
  command: gitmux -printcfg
  register: gitmux_config
  changed_when: gitmux_config.rc == 0

- name: software | tmux | write gitmux.conf file
  copy:
    content: "{{ gitmux_config.stdout }}"
    dest: /home/bernhard/.gitmux.conf
    owner: bernhard
    group: users
    mode: 0644
