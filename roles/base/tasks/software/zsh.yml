---
# Create zsh environment for user bernhard - variables defined in host_vars
# zsh package is installed in utilities.yml
  
- name: Software | Zsh | Creates zsh directory in .config for {{ user_name }}
  ansible.builtin.file:
    path: /home/{{ user_name }}/.config/{{ item.dir }}
    state: directory
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0775
  with_items:
    - { dir: 'zsh' }

- name: Software | zsh | download install.zsh script for zap (zsh plugin manager)
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh
    dest: /tmp/zap-install.zsh
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0755

- name: Software | zsh | run zap-install.zsh script (checkout to ~/.local/share/zap)
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.shell:
    cmd: /tmp/zap-install.zsh --branch release-v1 
  args:
    executable: /bin/zsh
  register: zap_run
  changed_when: zap_run.rc == 0

- name: Software | zsh | display zap-install result
  ansible.builtin.debug:
    msg: 
      - "{{ zap_run.stdout_lines }}"
    verbosity: 2
 
- name: Software | Zsh | copy individual zsh config files for {{ user_name }}
  ansible.builtin.copy:
    src: users/zsh/{{ item.src }}
    dest: /home/{{ user_name }}/.config/zsh/{{ item.dest }}
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0600
  with_items:
    - { src: 'aliases.zsh', dest: 'aliases.zsh' }
    - { src: 'history.zsh', dest: 'history.zsh' }
    - { src: 'prompt.zsh', dest: 'prompt.zsh' }
    - { src: 'functions.zsh', dest: 'functions.zsh' }
    - { src: 'zshrc', dest: '.zshrc' }

- name: Software | Zsh | copy zshenv as dotfile for {{ user_name }}
  ansible.builtin.copy:
    src: users/zsh/{{ item.src }}
    dest: /home/{{ user_name }}/{{ item.dest }}
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0600
  with_items:
    - { src: 'zshenv', dest: '.zshenv' }

- name: Software | Zsh | change shell to /bin/zsh - new login required
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.shell:
    cmd: chsh -s $(which zsh)
  args:
    executable: /bin/bash
  register: new_shell
  changed_when: new_shell.rc == 0
