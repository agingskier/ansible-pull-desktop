---
- name: System-setup nfs mounts block
  become: true
  become_method: sudo
  block:
    - name: System_setup | mounts | install nfs-common
      ansible.builtin.apt:
        state: present
        pkg:
          - nfs-common

    # For NFSv4 mounts to work correctly, it is necessary to set the NFS domain in the file /etc/idmapd.conf.
    - name: Insert domain name into /etc/idmapd.conf
      ansible.builtin.lineinfile:
        path: /etc/idmapd.conf
        insertafter: '^# Domain'
        line: 'Domain = sibdata.ch'
        firstmatch: true
        state: present     

    - name: System_setup | fstab | set swapfile as comment
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: "{{ item.regexp }}"
        replace: "{{ item.value }}"
      with_items:
        - { regexp: '^/swapfile ', value: '#/swapfile' }

    - name: System_setup | systemd mount | create nfs mountpoint directories
      ansible.builtin.file:
        path: /mnt/{{ item.dir }}
        state: directory
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: 0775
      with_items:
        - { dir: NAS }
        - { dir: NAS/backup }
        - { dir: NAS/documents }
        - { dir: NAS/manuals }
        - { dir: NAS/media }
        - { dir: NAS/rechnungen }
        - { dir: NAS/software }
        - { dir: NAS/steuern }

    - name: System_setup | systemd | copy mount files
      ansible.builtin.copy:
        src: mounts/{{ item.src }}
        dest: /etc/systemd/system/{{ item.dest }}
        owner: root
        group: root
        mode: 0644
      with_items:
        - { src: 'mnt-NAS-backup.mount', dest: 'mnt-NAS-backup.mount' }
        - { src: 'mnt-NAS-documents.mount', dest: 'mnt-NAS-documents.mount' }
        - { src: 'mnt-NAS-manuals.mount', dest: 'mnt-NAS-manuals.mount' }
        - { src: 'mnt-NAS-media.mount', dest: 'mnt-NAS-media.mount' }
        - { src: 'mnt-NAS-rechnungen.mount', dest: 'mnt-NAS-rechnungen.mount' }
        - { src: 'mnt-NAS-software.mount', dest: 'mnt-NAS-software.mount' }
        - { src: 'mnt-NAS-steuern.mount', dest: 'mnt-NAS-steuern.mount' }
#
# Service NetworkManager-wait-online must be enabled, otherwise the
# following mounts will fail (sometimes ok, sometimes not)
#
# The explanation for the unit section can be found in file
# mnt-NAS-software.mount
#
    - name: System_setup | service | enable NetworkManager-wait-online
      ansible.builtin.service:
        name: NetworkManager-wait-online
        enabled: true

    - name: System_setup | systemd | enable all mounts, reload daemon
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: restarted
        daemon_reload: true
      with_items:
        - 'mnt-NAS-backup.mount'
        - 'mnt-NAS-documents.mount'
        - 'mnt-NAS-manuals.mount'
        - 'mnt-NAS-media.mount'
        - 'mnt-NAS-rechnungen.mount'
        - 'mnt-NAS-software.mount'
        - 'mnt-NAS-steuern.mount'

    - name: System_setup | Add nfs NAS bookmarks
      ansible.builtin.lineinfile:
        dest: /home/{{ user_name }}/.config/gtk-3.0/bookmarks
        line: "{{ item.line }}"
        insertafter: EOF
      with_items:
        - { line: "file:///mnt/NAS NAS" }
        - { line: "file:///mnt/Data Data" }
        - { line: "file:///mnt/Storage Storage" }
        - { line: "file:///mnt/Digikam Digikam" }
        - { line: "file:///mnt/Games Games" }
        - { line: "file:///mnt/k8s K8S" }
