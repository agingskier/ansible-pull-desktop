---
#
# see: 'info -f grub -n 'Simple configuration' for information about grub configuration
#
- name: System-setup | grub block for {{ inventory_hostname }}
  become: true
  become_method: ansible.builtin.sudo
  when: "'bequiet' in inventory_hostname"
  block:
    - name: System-setup | grub | make sure /tmp has full access
      ansible.builtin.file:
        path: /tmp
        state: directory
        owner: root
        group: root
        mode: 0777

    - name: System-setup | grub | background | create images/gurb directories
      ansible.builtin.file:
        path: /usr/share/images/grub
        state: directory
        owner: root
        group: root
        mode: 0775

    - name: System-setup | grub | background | copy background images from files/images
      ansible.builtin.copy:
        src: images/{{ item.src }}
        dest: /usr/share/images/grub/{{ item.dest }}
        owner: root
        group: root
        mode: 0644
      with_items:
        - { src: "black-hole-blue.tga", dest: "black-hole-blue.tga" }
        - { src: "saturn-wallpaper.png", dest: "saturn-wallpaper.png" }
        - { src: "CarinaNebula.png", dest: "CarinaNebula.png" }
        - { src: "QuasarEarlyUniverse.jpg", dest: "QuasarEarlyUniverse.jpg" }
        - { src: "QuasarOutflow.png", dest: "QuasarOutflow.png" }
        - { src: "SouthernRingNebula.png", dest: "SouthernRingNebula.png" }
        - { src: "StephansQuintetGalaxies.png", dest: "StephansQuintetGalaxies.png" }

    - name: System-setup | grub | Themes | Recursively remove git target directory
      ansible.builtin.file:
        path: /tmp/{{ item }}
        state: absent
      with_items:
        - grub-darkmatter
        - grub-LordShenron

    - name: System_setup | grub | Themes | checkout git dark-matter repository
      ansible.builtin.git:
        repo: https://gitlab.com/VandalByte/darkmatter-grub-theme.git
        dest: /tmp/grub-darkmatter
        force: true
        version: main

    - name: System_setup | grub | Themes | checkout git LordShenron repository
      ansible.builtin.git:
        repo: https://github.com/LordShenron/Grub-Themes.git
        dest: /tmp/grub-LordShenron
        force: true
        version: griffin-grub-remix

    - name: System_setup | grub | Themes | create themes directories
      ansible.builtin.file:
        path: /boot/grub/{{ item }}
        state: directory
        owner: root
        group: root
        mode: 0755
      with_items:
        - themes/darkmatter
        - themes/lordshenron

    - name: System_setup | grub | Themes | copy all ubuntu base png files to darkmatter
      ansible.builtin.copy:
        src: /tmp/grub-darkmatter/base/1440p/
        dest: /boot/grub/themes/darkmatter/
        owner: root
        group: root
        mode: 0644

    - name: System_setup | grub | Themes | copy all ubuntu Griffin png files to lordshenron
      ansible.builtin.copy:
        src: /tmp/grub-LordShenron/Griffin/
        dest: /boot/grub/themes/lordshenron/
        owner: root
        group: root
        mode: 0644

    - name: System_setup | grub | Themes Darkmatter | copy png file ubuntu to background
      ansible.builtin.copy:
        src: /tmp/grub-darkmatter/assets/{{ item.src }}
        dest: /boot/grub/themes/darkmatter/{{ item.dest }}
        owner: root
        group: root
        mode: 0644
      with_items:
        - { src: "backgrounds/ubuntu-1440p.png", dest: "background.png" }
        - { src: "fonts/1440p/", dest: "." }
        - { src: "icons-1440p/color/", dest: "icons/" }

    - name: System_setup | grub | Insert GFXMODE value grub file
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        insertafter: "^#GRUB_GFXMODE="
        line: "GRUB_GFXMODE=1024x768x32,auto"

    - name: Replace all installed sources
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: "{{ item.regex }}"
        replace: "{{ item.repl }}"
      with_items:
        - { regex: '^GRUB_TIMEOUT_STYLE=hidden', repl: 'GRUB_TIMEOUT_STYLE=menu' }
        - { regex: '^GRUB_TIMEOUT=0', repl: 'GRUB_TIMEOUT=15' }
        - { regex: 'quiet splash', repl: ' ' }

    - name: System_setup | grub | add lines for BACKGROUND, THEME, GFXPAYLOAD_LINUX and DISABLE_OS_PROBER
      ansible.builtin.lineinfile:
        dest: /etc/default/grub
        line: "{{ item }}"
      with_items:
        - 'GRUB_BACKGROUND="/usr/share/images/grub/saturn-wallpaper.png"'
        - '#RUB_THEME="/boot/grub/themes/darkmatter/theme.txt"'
        - 'GRUB_THEME="/boot/grub/themes/lordshenron/theme.txt"'
        - 'GRUB_GFXPAYLOAD_LINUX="keep"'
        - 'GRUB_DISABLE_OS_PROBER="false"'

    - name: System_setup | grub | update grub configuration
      ansible.builtin.command: update-grub
      register: grub_updcmd
      changed_when: grub_updcmd.rc == 0

- name: System-setup | grub block for {{ inventory_hostname }}
  become: true
  become_method: ansible.builtin.sudo
  when: "'acermsch' in inventory_hostname"
  block:
    - name: System-setup | grub | make shure /tmp directory has full access
      ansible.builtin.file:
        path: /tmp
        state: directory
        owner: root
        group: root
        mode: 0777

    - name: System-setup | grub | create all missing directories for images
      ansible.builtin.file:
        path: /usr/share/images/grub
        state: directory
        owner: root
        group: root
        mode: 0644

    - name: System-setup | grub | copy black hole file
      ansible.builtin.copy:
        src: images/{{ item.src }}
        dest: /usr/share/images/grub/{{ item.dest }}
        owner: root
        group: root
        mode: 0644
      with_items:
        - { src: "black-hole-blue.tga", dest: "black-hole-blue.tga" }

    - name: System-setup | grub | Recursively remove git target directory
      ansible.builtin.file:
        path: /tmp/{{ item }}
        state: absent
      with_items:
        - grub-distro

    - name: System_setup | grub | checkout git distro-grub-themes repository
      ansible.builtin.git:
        repo: https://github.com/AdisonCavani/distro-grub-themes.git
        dest: /tmp/grub-distro
        force: true
        version: master

    - name: System_setup | grub | create themes directory
      ansible.builtin.file:
        path: /boot/grub/themes
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: System_setup | grub | unzip acer.tar file to grub/themes directory
      ansible.builtin.unarchive:
        src: /tmp/grub-distro/themes/acer.tar
        dest: /boot/grub/themes
        owner: root
        group: root
        mode: 0644

    - name: System_setup | grub | Replace CMDLINE with loglevel=3 to supress error messages
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        regexp: "^GRUB_CMDLINE_LINUX_DEFAULT="
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash loglevel=3'
        backrefs: true

    - name: System_setup | grub | Insert GFXMODE line
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        insertafter: "^#GRUB_GFXMODE="
        line: "GRUB_GFXMODE=1024x768x32"

    - name: System_setup | grub | lines for BACKGROUND, THEME, GFXPAYLOAD_LINUX and DISABLE_OS_PROBER
      ansible.builtin.lineinfile:
        dest: /etc/default/grub
        line: "{{ item }}"
      with_items:
        - 'GRUB_BACKGROUND="/usr/share/images/grub/black-hole-blue.tga"'
        - 'GRUB_THEME="/boot/grub/themes/theme.txt"'
        - 'GRUB_GFXPAYLOAD_LINUX="keep"'
        - 'GRUB_DISABLE_OS_PROBER="false"'

    - name: System_setup | grub | update grub configuration
      ansible.builtin.command: update-grub
      register: grub_updcmd
      changed_when: grub_updcmd.rc == 0
